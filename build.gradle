plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven {
		name = "Jitpack"
		url = "https://jitpack.io"
	}
	maven {
		url "https://maven.saps.dev/minecraft"
		content {
			includeGroup "dev.latvian.mods"
			includeGroup "dev.ftb.mods"
		}
	}
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	flatDir {
		dirs "./modsWithCompat"
		content {
			includeGroup "mods.compat"
		}
	}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	maven { url "https://maven.jamieswhiteshirt.com/libs-release" }
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven { url "https://maven.nucleoid.xyz/" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.

	//Config
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Compat mods
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modImplementation("me.lucko:fabric-permissions-api:0.1-SNAPSHOT")
	modImplementation("curse.maven:thegraveyard-514468:3792651")

	// Hammerlike compat
	modImplementation("com.github.Draylar:magna:${project.magna_version}")

	// Required for some mod compatibility to work
	modImplementation("dev.ftb.mods:ftb-library-fabric:${project.ftb_lib_version}") { transitive = false } // Required to get a ftb chunk (to check if it's claimed)
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}") { transitive = false }
	modImplementation("eu.pb4:placeholder-api:${project.placeholder_version}")
	modImplementation("eu.pb4:polymer:${project.polymer_version}")
	modImplementation("eu.pb4:sgui:${project.sgui_version}")
	modImplementation("com.jamieswhiteshirt:rtree-3i-lite-fabric:${project.rtree_version}") { transitive = false } // Required for goml compat to work
	modImplementation("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}")
	modImplementation "io.github.cottonmc:LibGui:${project.lib_gui_version}" // Required to work with levelz

	// Land claim compat mods
	modImplementation("mods.compat:flan-${project.flan_version}-fabric") { transitive = false }
	modImplementation("dev.ftb.mods:ftb-chunks-fabric:${project.ftb_chunks_version}") { transitive = false }
	modImplementation("mods.compat:goml-${project.goml_version}")

	// Inventory Compat mods
	modImplementation "dev.emi:trinkets:${project.trinkets_version}"
	modImplementation("mods.compat:levelz-${project.levelz_version}") { transitive = false }
	modImplementation("mods.compat:inventorio-${project.inventorio_version}") { transitive = false }
	modImplementation "mods.compat:travelers-backpack-${project.travelers_backpack_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}