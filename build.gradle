plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.shedaniel.me/" }  // cloth_config
	maven { url "https://maven.terraformersmc.com/" }  // mod_menu, trinkets
	maven { url "https://maven.ladysnake.org/releases"	}  // cardinal_components
	maven { url "https://server.bbkr.space/artifactory/libs-release" }  // LibGUI
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }  // Permission API
	maven { url "https://jitpack.io" }  // Apoli
	maven { url 'https://maven.wispforest.io' }  // owo
	maven {  // Inventorio, travelers backpack, numismatic overhaul, levelz, libz (curseforge maven)
		url "https://cursemaven.com"
		content { includeGroup "curse.maven" }
	}
}

dependencies {
	// Important constants idk
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Bundled
	modImplementation include("io.github.cottonmc:LibGui:${project.lib_gui_version}")
	modImplementation include("me.lucko:fabric-permissions-api:${project.permissions_version}")

	// Required dependencies
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Compat mods
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	// Inventory Mods
	modImplementation "dev.emi:trinkets:${project.trinkets_version}"
	modImplementation "curse.maven:inventorio-${project.inventorio_version}"
	modImplementation "curse.maven:travelersbackpack-${project.travelers_backpack_version}"
	modImplementation "curse.maven:numismaticoverhaul-${project.numismatic_version}"
	modImplementation "com.github.apace100:apoli:${project.apoli_version}"
	modImplementation "curse.maven:levelz-${project.levelz_version}"

	// Dev dependencies
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}"
	modImplementation "curse.maven:libz-${project.libz_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
